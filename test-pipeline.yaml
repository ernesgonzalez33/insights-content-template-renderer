apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: bonfire
  labels:
    build.appstudio.redhat.com/pipeline: "bonfire"
spec:
  params:
    - name: SNAPSHOT
      type: string
      description: |
        Spec section of an ApplicationSnapshot resource. Not all fields of the
        resource are required. A minimal example:
          {
            "components": [
              {
                "containerImage": "quay.io/example/repo:latest"
              }
            ]
          }
        Each "containerImage" in the "components" array is validated.
  results:
    - name: TEST_OUTPUT
      value: "$(tasks.run-test.results.TEST_OUTPUT)"
      description: ""
  tasks:
    - name: run-test
      params:
        - name: SNAPSHOT
          value: "$(params.SNAPSHOT)"
      taskSpec:
          params:
            - name: SNAPSHOT
              type: string
              description: "AppStudio snapshot (see example above)"
            - name: APP_INTERFACE_SECRET
              type: string
              default: app-interface
              description: "Secret for connecting to app-interface"
            - name: EPHEMERAL_ENV_PROVIDER_SECRET
              type: string
              default: ephemeral-env-provider
              description: "Secret for connecting to ephemeral env provider cluster"
            - name: APP_NAME
              type: string
              description: name of app-sre "application" folder this component lives in
              default: ccx-data-pipeline
            - name: COMPONENT_NAME
              type: string
              description: name of app-sre "resourceTemplate" in deploy.yaml for this component
              default: insights-content-template-renderer
            - name: COMPONENTS
              type: string
              description: space-separated list of components to load
              default: insights-content-template-renderer
            - name: COMPONENTS_W_RESOURCES
              type: string
              description: component to keep
              default: insights-content-template-renderer
            - name: IQE_PLUGINS
              type: string
              description: name of the IQE plugin for this app.
              default: ccx
            - name: IQE_MARKER_EXPRESSION
              type: string
              description: This is the value passed to pytest -m
              default: ""
            - name: IQE_FILTER_EXPRESSION
              type: string
              description: This is the value passed to pytest -k
              default: test_plugin_accessible
            - name: IQE_REQUIREMENTS_PRIORITY
              type: string
              description: ""
              default: ""
            - name: IQE_TEST_IMPORTANCE
              type: string
              description: ""
              default: ""
            - name: IQE_CJI_TIMEOUT
              type: string
              description: This is the time to wait for smoke test to complete or fail
              default: 30m
          results:
            - name: TEST_OUTPUT
              description: ""
          steps:
            - name: run-test
              image: quay.io/redhat-user-workloads/rhtap-migration-tenant/bonfire-cicd-tools/cicd-tools@sha256:83a0d4ebc9a6b441c541bf366882ad58e4bdc2b5191cde55ada7e175e9896d11
              env:
                - name: APP_INTERFACE_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: $(params.APP_INTERFACE_SECRET)
                      key: username
                - name: APP_INTERFACE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: $(params.APP_INTERFACE_SECRET)
                      key: password
                - name: APP_INTERFACE_BASE_URL
                  valueFrom:
                    secretKeyRef:
                      name: $(params.APP_INTERFACE_SECRET)
                      key: baseurl
                - name: OC_LOGIN_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: $(params.EPHEMERAL_ENV_PROVIDER_SECRET)
                      key: token
                - name: OC_LOGIN_SERVER
                  valueFrom:
                    secretKeyRef:
                      name: $(params.EPHEMERAL_ENV_PROVIDER_SECRET)
                      key: url
                - name: APP_NAME
                  value: $(params.APP_NAME)
                - name: COMPONENT_NAME
                  value: $(params.COMPONENT_NAME)
                - name: COMPONENTS
                  value: $(params.COMPONENTS)
                - name: COMPONENTS_W_RESOURCES
                  value: $(params.COMPONENTS_W_RESOURCES)
                - name: IQE_PLUGINS
                  value: $(params.IQE_PLUGINS)
                - name: IQE_MARKER_EXPRESSION
                  value: $(params.IQE_MARKER_EXPRESSION)
                - name: IQE_FILTER_EXPRESSION
                  value: $(params.IQE_FILTER_EXPRESSION)
                - name: IQE_REQUIREMENTS_PRIORITY
                  value: $(params.IQE_REQUIREMENTS_PRIORITY)
                - name: IQE_CJI_TIMEOUT
                  value: $(params.IQE_CJI_TIMEOUT)
                - name: SKIP_REGISTRY_LOGIN
                  value: "true"
                - name: CICD_REPO_ORG
                  value: gbenhaim
                # String interpolation is easier when injecting the SNAPSHOT to an env var.
                - name: SNAPSHOT
                  value: $(params.SNAPSHOT)
                - name: JOB_NAME
                  value: rhtap
                - name: BUILD_NUMBER
                  value: $(context.pipelineRun.name)
              script: |
                #!/bin/bash
                set -ex

                # Install bonfire repo/initialize
                CICD_URL=https://raw.githubusercontent.com/RedHatInsights/bonfire/master/cicd
                curl -s $CICD_URL/bootstrap.sh > .cicd_bootstrap.sh && source .cicd_bootstrap.sh
                
                echo "deploying to ephemeral"

                # Override with values from the appstudio snapshot
                # export IMAGE="quay.io/cloudservices/insights-content-template-renderer"

                parsed="$(parse-snapshot.py)"
                echo "$parsed"
                eval "$parsed"

                source $CICD_ROOT/deploy_ephemeral_env.sh

                echo "running PR smoke tests"
                # source $CICD_ROOT/cji_smoke_test.sh

                echo "this is a test output" > $(results.TEST_OUTPUT.path)



# Reserve namespace
  # Finally release namespace
# Deploy resources
# Run tests cicd-tools/cji_smoke_test.sh
